<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Carlos Biagi Jr</title>
    <link>/</link>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <description>Carlos Biagi Jr</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 09 Aug 2020 13:08:40 +0200</lastBuildDate>
    <image>
      <url>/images/icon_huce239040eb2a10cf8e49f362a5f47bf9_18820_512x512_fill_lanczos_center_2.png</url>
      <title>Carlos Biagi Jr</title>
      <link>/</link>
    </image>
    
    <item>
      <title>Example Page 1</title>
      <link>/courses/example/example1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/courses/example/example1/</guid>
      <description>&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Page 2</title>
      <link>/courses/example/example2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>/courses/example/example2/</guid>
      <description>&lt;p&gt;Here are some more tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;tip-3&#34;&gt;Tip 3&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;tip-4&#34;&gt;Tip 4&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CeTF</title>
      <link>/project/cetf/</link>
      <pubDate>Sun, 09 Aug 2020 13:08:40 +0200</pubDate>
      <guid>/project/cetf/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>/project/docker/</link>
      <pubDate>Sun, 09 Aug 2020 13:08:40 +0200</pubDate>
      <guid>/project/docker/</guid>
      <description></description>
    </item>
    
    <item>
      <title>scCeTF</title>
      <link>/project/sccetf/</link>
      <pubDate>Sun, 09 Aug 2020 13:08:40 +0200</pubDate>
      <guid>/project/sccetf/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Elevated Glucose Levels Favor SARS-CoV-2 Infection and Monocyte Response through a HIF-1α/Glycolysis-Dependent Axis</title>
      <link>/publication/covid/</link>
      <pubDate>Fri, 17 Jul 2020 00:00:00 +0000</pubDate>
      <guid>/publication/covid/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A fast and smart alternative for classifying cell types</title>
      <link>/post/post_02/</link>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
      <guid>/post/post_02/</guid>
      <description>&lt;p&gt;This post is about a big question in single-cell analysis: how to classify/identify the cell types of my data? I would like to have an answer, but there is still no consensus. According to the 
&lt;a href=&#34;https://www.scrna-tools.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scRNA-tools website&lt;/a&gt;, there are 67 cataloged tools for classifying cell types implemented in R, Python, etc. I consider that there are two main types of classifying cell types:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using classic known markers, as PECAM1 for Edothelial cells, CD19 for B cells, etc. A website that has a very extensive and complete database is 
&lt;a href=&#34;http://biocc.hrbmu.edu.cn/CellMarker/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CellMarker&lt;/a&gt;, where you can find genes marker based on the literature and experiments. This classification of cell types is based on the high expression of these specific marker genes.&lt;/li&gt;
&lt;li&gt;Using automated methods that infers the cell type. As stated above, you can find a list of these different tools on the 
&lt;a href=&#34;https://www.scrna-tools.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;scRNA-tools website&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The most common way of doing the classification is by identifying the different clusters and doing differential expression analysis of one group against all the others in order to find the genes that are most differentially expressed in each group. In this post I chose to talk to you about a very interesting tool that combines this principle mentioned above with a database of markers for different tissues and cancers. The tool is called scCATCH and the original article can be found 
&lt;a href=&#34;https://www.sciencedirect.com/science/article/pii/S2589004220300663&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt; and with the 
&lt;a href=&#34;https://github.com/ZJUFanLab/scCATCH&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; page. An overview of the package is show in &lt;strong&gt;Figure 1&lt;/strong&gt; below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;Overview.png&#34; alt=&#34;overview&#34;&gt;
&lt;em&gt;Fig. 1: Overview of scCATCH  (image taken from the original article.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The tool is implemented as an R package and includes a panel of 353 cell types and related 686 subtypes associated with 184 tissue types, 20,792 cell-specific marker genes and 2,097 references of human and mouse. More informations about the package can be found in the GitHub and paper mentioned above. &amp;ldquo;Basically&amp;rdquo;, the package will find the marker genes for each cluster and associate those genes with the database.&lt;/p&gt;
&lt;p&gt;One of the strategies used in this tool that caught my attention was that instead of calculating the markers for a specific cluster comparing against all the others, it calculates the markers of that cluster against each one individually and joining these information at the end. I tried to implement the tool on some data that I am analyzing but I realized that it was taking a long time to run (approximately 5h for a total of 10k cells with 18 clusters). So I decided to take a closer look at the source code and found that piece of code:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;original.png&#34; alt=&#34;original&#34;&gt;
&lt;em&gt;Fig. 2: Step in which the markers for each cluster are calculated.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In summary, this part of the code will calculate the logFC, pvalue using the Wilcox test and the percentage of expression of a specific marker between two clusters. These steps are very time-consuming because are implemented in R, and calculates the Wilcox test for each case. To solve this first I looked for a parallelization parameter in the package, but it is not implemented in the package.&lt;/p&gt;
&lt;p&gt;So to continue using scCATCH more efficiently I edited the source code of the part above (&lt;em&gt;Fig. 2&lt;/em&gt;) as shown in &lt;em&gt;Fig. 3&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;new.png&#34; alt=&#34;new&#34;&gt;
&lt;em&gt;Fig. 3: Piece of code modified.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The implementation I did is to keep the same calculations, but now using the &lt;em&gt;FindMarkers&lt;/em&gt; function of the 
&lt;a href=&#34;https://satijalab.org/seurat/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Seurat&lt;/a&gt; package to perform the Wilcox test and get the pvalue, in addition to calculating the percentage of expression of a specific marker between two clusters. The logFC calculation was maintained as proposed in scCATCH package.&lt;/p&gt;
&lt;p&gt;The package with these modifications can be downloaded 
&lt;a href=&#34;scCATCH_2.0.tar.gz&#34;&gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt; and installed using de following command:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;install.packages(&amp;quot;/path/to/package/scCATCH_2.0.tar.gz&amp;quot;, repos = NULL)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;markwhyhow-will-this-implementation-improve-the-sccatch-performancemark&#34;&gt;&lt;mark&gt;Why/How will this implementation improve the scCATCH performance?&lt;/mark&gt;&lt;/h2&gt;
&lt;p&gt;There is an R package called 
&lt;a href=&#34;https://cran.r-project.org/web/packages/future/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Future&lt;/a&gt; that provides a lightweight and unified Future API for sequential and parallel processing of R expression. The Seurat package has a tutorial that shows you how to perform 
&lt;a href=&#34;https://satijalab.org/seurat/v3.0/future_vignette.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;parallelization in Seurat with future&lt;/a&gt;, and one of the functions that are enabled for parallelization using the future package is &lt;em&gt;FindMarkers&lt;/em&gt;, exactly the one I used in the implementation above. With &lt;strong&gt;Future&lt;/strong&gt; is possible to &lt;em&gt;plan&lt;/em&gt; differents strategies to parallelize the scCATCH package, like sequential, multisession, multicore, multiprocess, clusters, etc. A more detailed explanation of the plan types can be found in the package 
&lt;a href=&#34;https://cran.r-project.org/web/packages/future/vignettes/future-1-overview.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;vignette&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, one example of the way of using the Future package along with scCATCH is that way:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;# Loading packages
library(Seurat)
library(future)
library(scCATCH) 

# Set memory for each worker
options(future.globals.maxSize = 1000 * 1024^2)

# An example with multicore planning 10 workers
plan(&amp;quot;multicore&amp;quot;, workers = 10)

# Running scCATCH as default showed in their GitHub page
clu_markers &amp;lt;- findmarkergenes(object = data,
                               species = &#39;Human&#39;,
                               cluster = &#39;All&#39;,
                               match_CellMatch = FALSE,
                               cancer = NULL,
                               tissue = NULL,
                               cell_min_pct = 0.25,
                               logfc = 0.25,
                               pvalue = 0.05)
                               
clu_ann &amp;lt;- scCATCH(object = clu_markers$clu_markers,
                   species = &#39;Human&#39;,
                   tissue = &amp;quot;Pancreas&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is very impressive because in the same dataset without this modification that was taking approximately 5 hours it is now taking less than 10 minutes, with the same satisfactory results!!&lt;/p&gt;
&lt;p&gt;Finally, the result of the &lt;em&gt;scCATCH&lt;/em&gt; function is the classification of cell types for different clusters. I realized that for the results of my data there were 2 clusters that the tool had not been able to classify, so when translating these results to Seurat in order to obtain a graphical visualization (tSNE or UMAP), the assignment of the clusters with the cell types were wrong or out of order. From there, I created a function that takes the dataframe resulting from the scCATCH function, along with the Seurat object with the data, and automatically adds the classification information, placing as clusters that have not been classified as unclassified.&lt;/p&gt;
&lt;p&gt;The function is as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;convertSeurat &amp;lt;- function(seurat_object, scCATCH_anno) {
  tmp1 &amp;lt;- data.frame(cluster = levels(Idents(seurat_object)))
  tmp &amp;lt;- merge(tmp1, scCATCH_anno, by = &#39;cluster&#39;, all = T)
  tmp$cell_type[which(is.na(tmp$cell_type))] &amp;lt;- &amp;quot;Unclassified&amp;quot;
  
  new.cluster.ids &amp;lt;- tmp$cell_type
  names(new.cluster.ids) &amp;lt;- levels(seurat_object)
  seurat_object &amp;lt;- RenameIdents(seurat_object, new.cluster.ids)
  
  return(seurat_object)
}

# data is the Seurat object and clu_ann the scCATCH result
data &amp;lt;- convertSeurat(data, clu_ann)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s all for today, folks! I hope it was a good introduction to the subject of classifying cell types applied to single-cell data. As stated at the beginning, this subject is very broad, and my intention was to give an overview of a tool that I found very interesting for this function with a smart modification for better performance. As is known, manual classification classification is usually time-consuming, that way having tools that can automatically classify can save time and resources!&lt;/p&gt;
&lt;p&gt;I hope it may have helped you to understand a little this whole process, and mainly that with this function it may have facilitated the use of the SCCAF tool. Any questions, comments, suggestions, criticisms, etc., feel free!&lt;/p&gt;
&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Stop your analysis until you read this clustering secret</title>
      <link>/post/post_01/</link>
      <pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate>
      <guid>/post/post_01/</guid>
      <description>&lt;p&gt;I had been analyzing the data for a while with my friend 
&lt;a href=&#34;https://twitter.com/cleidson_alves&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cleidson&lt;/a&gt; and we always asked ourselves, how to determine the optimal number of clusters for our data? I think this is one of the main questions when working with single-cell data. Although some better known tools like Seurat (R) and Scanpy (Python) have different methods of clustering, they do not return the optimal number of clusters. What I had been doing previously was generating different resolutions with the data and checking with the 
&lt;a href=&#34;https://github.com/lazappi/clustree&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;clustree&lt;/a&gt; package in R how the clusters were split from the smallest to the maximum resolution that I had predetermined.&lt;/p&gt;
&lt;p&gt;I was generating something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;data &amp;lt;- FindClusters(data, resolution = seq(0, 1, 0.1))

clustree(data)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;clustree.png&#34; alt=&#34;&amp;ldquo;clustree&amp;rdquo;&#34;&gt;
&lt;em&gt;Fig. 1: clustree visualization.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The approach was basically to look at the graph above and identify the resolution where there were not many changes in the numbers of clusters. It is not the best alternative by far, but it was an attempt.&lt;/p&gt;
&lt;p&gt;Until following on Twitter I saw a 
&lt;a href=&#34;https://www.nature.com/articles/s41592-020-0825-9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;paper&lt;/a&gt; that came out on May 18th, and I found the methodology and results very interesting. The paper included the 
&lt;a href=&#34;https://github.com/SCCAF/sccaf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SCCAF tool&lt;/a&gt;(installation instructions) which, in simple words, assumes that you pass as input each cluster being theoretically a cell type, and from the implementation of SCCAF (which includes a good part of machine learning) will return what is the combination of clusters (or cell types) that have better accuracy. Are you confused yet? I&amp;rsquo;ll show you an example below.&lt;/p&gt;
&lt;p&gt;The tool was made entirely in Python, and I had my data all run using Seurat, in R. Initially I thought that a simple conversion of the seurat object to a loom file would be enough, but I had the following problem when putting SCCAF to run:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;import warnings
warnings.filterwarnings(&amp;quot;ignore&amp;quot;)
from SCCAF import *

ad = sc.read(filename=&amp;quot;/projects/biagi/data.loom&amp;quot;)

ad.obs[&#39;L1_Round0&#39;] = ad.obs[&#39;clusters&#39;]
SCCAF_optimize_all(min_acc=0.953, ad=ad, basis =&#39;tsne&#39;, c_iter=5)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;error.png&#34; alt=&#34;&amp;ldquo;clustree&amp;rdquo;&#34;&gt;
&lt;em&gt;Fig. 2: SCCAF error message.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I realized that the way that Seurat generates the loom file was not the default way for the AnnData object that will be read inside python. To work around this problem, I tested numerous alternatives, but none worked. Then I remembered that in version 2 of Seurat there was a function that converted the seurat object to a h5ad file. So I took the source function of version 2 as a base and went on adapting and modifying it until I had a function that converts the seurat object to an h5ad file, which is exactly what we need to give as input to SCCAF.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;SeuratToH5ad &amp;lt;- function(seurat_object, filename, assay = NULL, res = 1) {
  library(reticulate)

  if (!py_module_available(&amp;quot;anndata&amp;quot;) | !py_module_available(&amp;quot;scanpy&amp;quot;) | !py_module_available(&amp;quot;igraph&amp;quot;) | !py_module_available(&amp;quot;louvain&amp;quot;)) {
    stop(&amp;quot;Please install the anndata python module&amp;quot;)
  }
  ad &amp;lt;- import(&amp;quot;anndata&amp;quot;)
  sc &amp;lt;- import(&amp;quot;scanpy&amp;quot;)
  
  message(paste(&amp;quot;Starting to fix the mess...&amp;quot;))
  
  raw &amp;lt;- seurat_object@assays$RNA@data
  if (assay == &amp;quot;RNA&amp;quot;) {
    X &amp;lt;- seurat_object@assays$RNA@scale.data
  } else if (assay == &amp;quot;SCT&amp;quot;) {
    X &amp;lt;- seurat_object@assays$SCT@scale.data
  } else {
    stop(&amp;quot;Please select an existent assay&amp;quot;)
  }
  
  cell_names &amp;lt;- colnames(x = X)
  gene_names &amp;lt;- rownames(x = X)
  raw &amp;lt;- as(object = raw, Class = &amp;quot;dgCMatrix&amp;quot;)
  
  scipy &amp;lt;- import(module = &#39;scipy.sparse&#39;, convert = FALSE)
  sp_sparse_csc &amp;lt;- scipy$csc_matrix
  raw.rownames &amp;lt;- rownames(x = raw)
  raw &amp;lt;- sp_sparse_csc(
    tuple(np_array(raw@x), np_array(raw@i), np_array(raw@p)),
    shape = tuple(raw@Dim[1], raw@Dim[2])
  )
  
  raw &amp;lt;- raw$T
  raw &amp;lt;- dict(X = raw, var = dict(var_names = raw.rownames))
  
  X &amp;lt;- np_array(t(x = X))
  
  obsm &amp;lt;- list()
  for (dr in names(seurat_object@reductions)) {
    obsm[[paste0(&amp;quot;X_&amp;quot;,dr)]] &amp;lt;- np_array(Embeddings(
      object = seurat_object,
      reduction = dr
    ))
  }
  obsm &amp;lt;- dict(obsm)
  meta_data &amp;lt;- seurat_object@meta.data
  if (&amp;quot;nCount_RNA&amp;quot; %in% colnames(x = meta_data)) {
    colnames(x = meta_data) &amp;lt;- gsub(
      pattern = &amp;quot;nCount_RNA&amp;quot;,
      replacement = &amp;quot;n_counts&amp;quot;,
      x = colnames(x = meta_data)
    )
  }
  if (&amp;quot;nFeature_RNA&amp;quot; %in% colnames(x = meta_data)) {
    colnames(x = meta_data) &amp;lt;- gsub(
      pattern = &amp;quot;nFeature_RNA&amp;quot;,
      replacement = &amp;quot;n_genes&amp;quot;,
      x = colnames(x = meta_data)
    )
  }
  colnames(x = meta_data) &amp;lt;- gsub(
    pattern = &amp;quot;\\.&amp;quot;,
    replacement = &amp;quot;_&amp;quot;,
    x = colnames(x = meta_data)
  )
  
  anndata.object &amp;lt;- ad$AnnData(
    raw = raw,
    X = X,
    obs = meta_data,
    obsm = obsm
  )
  anndata.object$var_names &amp;lt;- gene_names
  anndata.object$obs_names &amp;lt;- cell_names
  
  message(paste(&amp;quot;Clustering for resolution:&amp;quot;, res))
  sc$pp$neighbors(anndata.object)
  sc$tl$louvain(anndata.object, resolution=res, key_added = paste0(&amp;quot;res&amp;quot;, res))
  
  message(paste(&amp;quot;Writing to h5ad file...&amp;quot;))
  anndata.object$write(filename)
  message(paste(&amp;quot;Finished!!&amp;quot;))
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s explain in more detail the function parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;seurat_object:&lt;/strong&gt; a seurat object with the basic steps already run (NormalizeData, FindVariableFeatures, ScaleData, RunPCA, FindNeighbors, FindClusters and RunUMAP/RunTSNE);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filename:&lt;/strong&gt; path with file name (i.e. &lt;em&gt;/path/to/output/file.h5ad&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;assay:&lt;/strong&gt; choose between RNA or SCT;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;res:&lt;/strong&gt; resolution for clustering if clustering has not yet been done.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, in the end the function will bem implemented this way:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-R&#34;&gt;SeuratToH5ad(seurat_object = data, 
             filename = &amp;quot;/path/to/output//data.h5ad&amp;quot;,
             assay = &amp;quot;RNA&amp;quot;, 
             res = 1)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some important details: for the function to work it is necessary to have the 
&lt;a href=&#34;https://cran.r-project.org/web/packages/reticulate/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;reticulate&lt;/a&gt; package installed. In addition to it, it is necessary to install the &lt;strong&gt;anndata&lt;/strong&gt;, &lt;strong&gt;scanpy&lt;/strong&gt;, &lt;strong&gt;pandas&lt;/strong&gt;, &lt;strong&gt;louvain&lt;/strong&gt; modules in the &lt;em&gt;r-reticulate&lt;/em&gt; environment that the Seurat package itself creates automatically.&lt;/p&gt;
&lt;p&gt;To install these modules, simply identify the full name of the &lt;em&gt;r-reticulate&lt;/em&gt; environment:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-Python&#34;&gt;# list all available conda environments
conda env list

# in my case
conda activate /home/biagi/.local/share/r-miniconda/envs/r-reticulate

# installing each module manually
conda install -c bioconda anndata
conda install -c bioconda scanpy
conda install -c anaconda pandas
conda install -c conda-forge louvain

# deactivate r-reticulate env
conda deactivate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The next steps, from the generated h5ad file, can be followed through the tutorial available on the 
&lt;a href=&#34;https://github.com/SCCAF/sccaf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tool&amp;rsquo;s GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I ran for a dataset with approximately 70,000 cells and the complete SCCAF analysis took almost 2 hours. Consider that I am using the 
&lt;a href=&#34;https://rrzk.uni-koeln.de/en/hpc-projects/hpc/technical-details&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cologne High Efficiency Operating Platform for Science (CHEOPS)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I strongly recommend reading the 
&lt;a href=&#34;https://www.nature.com/articles/s41592-020-0825-9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;original paper&lt;/a&gt; before using the tool to better understand the methods. As I said at the beginning, I used it in my data and the results were very satisfactory and I included it in the default pipeline of my analyzes.&lt;/p&gt;
&lt;p&gt;I hope it may have helped you to understand a little this whole process, and mainly that with this function it may have facilitated the use of the SCCAF tool. Any questions, comments, suggestions, criticisms, etc., feel free!&lt;/p&gt;
&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>CeTF: an R package to Coexpression for Transcription Factors using Regulatory Impact Factors (RIF) and Partial Correlation and Information (PCIT) analysis</title>
      <link>/publication/cetf/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      <guid>/publication/cetf/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ultraconserved long non-coding RNA uc.112 is highly expressed in childhood T versus B-cell acute lymphoblastic leukemia</title>
      <link>/publication/ultraconserved/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      <guid>/publication/ultraconserved/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Whole transcriptome analysis reveals correlation of long noncoding RNA ZEB1-AS1 with invasive profile in melanoma</title>
      <link>/publication/zeb1/</link>
      <pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate>
      <guid>/publication/zeb1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A simplified approach using Taqman low-density array for medulloblastoma subgrouping</title>
      <link>/publication/medulloblastoma/</link>
      <pubDate>Thu, 04 Apr 2019 00:00:00 +0000</pubDate>
      <guid>/publication/medulloblastoma/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Landing Page</title>
      <link>/projects/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <guid>/projects/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mitochondrial transcription factor A (TFAM) shapes metabolic and invasion gene signatures in melanoma</title>
      <link>/publication/tfam/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      <guid>/publication/tfam/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
